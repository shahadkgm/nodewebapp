<%- include("../../views/partials/admin/header") %>
<head>
   <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
</head>
<style>
   .error-message {
       color: red;
       font-size: 0.875rem;
       margin-top: 0.25rem;
   }

   .thumbnails-container {
       display: flex;
       overflow-x: auto;
       gap: 10px;
       padding: 10px 0;
   }

   .thumbnail {
       position: relative;
       margin-right: 10px;
   }

   .btn-sm {
       margin-left: 10px;
   }

   #imgView1, #imgView2, #imgView3, #imgView4 {
       max-width: 200px;
       max-height: 200px;
       object-fit: contain;
   }

   .image-preview {
       position: relative;
       margin-bottom: 1rem;
   }

   .image-counter {
       position: absolute;
       top: -10px;
       right: -10px;
       background-color: #1e918b;
       color: white;
       padding: 2px 8px;
       border-radius: 12px;
       font-size: 0.75rem;
   }
</style>
   <section class="content-main">
       <div class="row">
           <div class="col-9">
               <div class="content-header">
                   <h2 class="content-title">Add New Product</h2>
               </div>
           </div>
           <div class="col-lg-6">
               <div class="card mb-4">
                   <div class="card-body">
                       <form method="post" action="/admin/addproducts" enctype="multipart/form-data"
                           onsubmit="return validateForm()
">
                           <div class="mb-4">
                               <label for="product_name" class="form-label">Product Name</label>
                               <input type="text" placeholder="Type here" name="productName"
                                   class="form-control border  border-success" id="product_name">
                               <div id="productName-error" class="error-message"></div>
                           </div>
                          
                           <div class="mb-4">
                               <label class="form-label">Full description</label>
                               <textarea placeholder="Type here" id="descriptionid" name="description" class="form-control border border-success"
                                   rows="4"></textarea>
                               <div id="description-error" class="error-message"></div>
                           </div>
                           <div class="row">
                               <div class="col-lg-4">
                                   <div class="mb-4">
                                       <label class="form-label">Regular price</label>
                                       <input placeholder="₹" name="regularPrice" type="text"
                                           class="form-control border border-success">
                                           <div id="regularPrice-error" class="error-message"></div>
                                   </div>
                               </div>
                               <div class="col-lg-4">
                                   <div class="mb-4">
                                       <label class="form-label">Sale price</label>
                                       <input placeholder="₹" name="salePrice" type="text" class="form-control border border-success">
                                      
                                   </div>
                                   <div id="salePrice-error" class="error-message"></div>
                               </div>
                               <div class="col-lg-4">
                                   <div class="mb-4">
                                       <label class="form-label">Quantity</label>
                                       <input placeholder="" name="quantity" type="text" class="form-control border border-success">
                                       <div id="quantity-error" class="error-message"></div>
                                   </div>
                               </div>
                           </div>
                           <div class="row">
                              
                               <div class="col-lg-4">
                                   <div class="mb-4 ">
                                       <label class="form-label">Color</label>
                                       <input  name="color" type="text" class="form-control border border-success">
                                   </div>
                                   <div id="color-error" class="error-message"></div>
                               </div>
                            
                           </div>
                           <div class="card mb-4">
                               <div class="card-body border border-success">
                                   <div class="row gx-2">
                                       <div class="col-sm-6 mb-3">
                                           <label class="form-label">Category</label>
                                        
                                           <select class="form-select border" name="category" id="category" style="width: 150px;" >
                                            <option value=""  selected>Select a category</option>

                                               <%for(let i=0;i<cat.length;i++){%>


                                              
                                                   <option value="<%=cat[i].name%>">
                                                   
                                                    <%=cat[i].name%>
                                                       
                                                   </option>
                                                  <%}%>
                                                 
                                                   
                                           </select>
                                           <div id="category-error" class="error-message"></div>
                                       </div>
                                   </div>
                               </div>
                           </div>
                           <div class="card-body ">

                           
                           <div class="card-body mb-2 border border-success">
                               <div class="card-header bg-info text-decoration-none">
                                   <h4 style="text-align: center;">Choose images</h4>
                               </div>
                               <div class="border row">
                                   <div id="addedImagesContainer" class="thumbnails-container"></div>
                               </div>
                               <div class="row">
                                   <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                       <img src="" alt="" id="imgView1">
                                                                   <input class="form-control btn btn-outline-success" type="file" name="images" id="input1"
                                                                       accept="image/png, image/jpeg, image/jpg"
                                                                       onchange="viewImage1(event), viewImage(event, 1)">
                                                                       <div id="images-error" class="error-message"></div>
                                                               </div>
                                                               <div class="image-cropper d-flex align-items-center"
                                                                   style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                                                   <img src="" id="croppedImg1" alt="">
                                                                   <button type="button" id="saveButton1" class="btn-sm btn btn-outline-success">Save</button>
                                                               </div>
                                                           </div>
                                                          
                                                           <div class="row">
                                                               <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                                                   <img src="" alt="" id="imgView2">


                                                                   <input class="form-control btn btn-outline-success" type="file" name="images" id="input2"
                                                                       accept="image/png, image/jpeg, image/jpg"
                                                                       onchange="viewImage2(event),viewImage(event, 2)">

                                                               </div>
                                                               <div class="image-cropper d-flex align-items-center"
                                                                   style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                                                   <img src="" id="croppedImg2" alt="">
                                                                   <button type="button" id="saveButton2" class="btn-sm btn btn-outline-success">Save</button>
                                                               </div>
                                                           </div>
                                                          
                                                           <div class="row">
                                                               <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                                                   <img src="" alt="" id="imgView3">


                                                                   <input class="form-control btn btn-outline-success" type="file" name="images" id="input3"
                                                                       accept="image/png, image/jpeg, image/jpg"
                                                                       onchange="viewImage3(event),viewImage(event, 3)">

                                                               </div>
                                                               <div class="image-cropper d-flex align-items-center"
                                                                   style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                                                   <img src="" id="croppedImg3" alt="">
                                                                   <button type="button" id="saveButton3" class="btn-sm btn btn-outline-success">Save</button>
                                                               </div>
                                                           </div>
                                                          
                                                           <div class="row">
                                                               <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                                                   <img src="" alt="" id="imgView4">


                                                          
                                                                   <input class="form-control btn btn-outline-success" type="file" name="images" id="input4"
                                                                       accept="image/png, image/jpeg, image/jpg"
                                                                       onchange="viewImage4(event),viewImage(event, 4)">
                                                               </div>
                                                               <div class="image-cropper d-flex align-items-center"
                                                                   style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                                                   <img src="" id="croppedImg4" alt="">
                                                                   <button type="button" id="saveButton4" class="btn-sm btn btn-outline-success">Save</button>
                                                               </div>
                                                           </div>
                          
                                                       </div>
                                                    </div>
                           </div>
                           <div>
                               <button class="btn btn-md rounded font-sm hover-up btn-outline-success" style="margin-left: 40px;"  type="button" onclick="validateAndSubmit()">Publish</button>
                           </div>
                       </form>
                   </div>
               </div>
           </div>
       </div>
   </section>
<script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>
  <script>
function validateAndSubmit(){
    if(validateForm()){
       document.forms[0].submit() ;
    }
};

function viewImage1(event){
    document.getElementById("imgView1").src=URL.createObjectURL(event.target.files[0])
}

function viewImage2(event){
    document.getElementById("imgView2").src=URL.createObjectURL(event.target.files[0])
}

function viewImage3(event){
    document.getElementById("imgView3").src=URL.createObjectURL(event.target.files[0])
}

function viewImage4(event){
    document.getElementById("imgView4").src=URL.createObjectURL(event.target.files[0])
}
let cropper;

function viewImage(event, index) {
    let input = event.target;
    let reader = new FileReader();

    reader.onload = function () {
        let dataURL = reader.result;
        let image = document.getElementById("imgView" + index);

        if (!image) {
            console.error(`Image element with id "imgView${index}" not found.`);
            return;
        }

        image.src = dataURL;

        if (cropper) {
            cropper.destroy();
        }

        cropper = new Cropper(image, {
            aspectRatio: 1,
            viewMode: 1,
            guides: true,
            background: false,
            autoCropArea: 1,
            zoomable: true,
        });

        let cropperContainer = document.querySelector("#croppedImg" + index)?.parentNode;
        if (!cropperContainer) {
            console.error(`Cropper container for index ${index} not found.`);
            return;
        }
        cropperContainer.style.display = "block";

        let saveButton = document.querySelector("#saveButton" + index);
        if (!saveButton) {
            console.error(`Save button with id "saveButton${index}" not found.`);
            return;
        }

        saveButton.onclick = async function () {
            if (!cropper) {
                console.error("Cropper instance is not available.");
                return;
            }

            try {
                let croppedCanvas = cropper.getCroppedCanvas({width:300,height:300 });
                if (!croppedCanvas) {
                    console.error("Failed to get cropped canvas.");
                    return;
                }

                let croppedImage = document.getElementById("croppedImg" + index);
                croppedImage.src = croppedCanvas.toDataURL("image/jpeg", 1.0);

                if (!croppedImage) {
                    console.error(`Cropped image element with id "croppedImg${index}" not found.`);
                    return;
                }

                croppedImage.src = croppedCanvas.toDataURL("image/jpeg", 1.0);

                let timestamp = new Date().getTime();
                let fileName = `cropped-Img-${timestamp}-${index}.png`;

                await croppedCanvas.toBlob((blob) => {
                    let input = document.getElementById("input" + index);
                    if (!input) {
                        console.error(`Input element with id "input${index}" not found.`);
                        return;
                    }

                    let imgFile = new File([blob], fileName, { type: blob.type });
                    const fileList = new DataTransfer();
                    fileList.items.add(imgFile);
                    input.files = fileList.files;
                });

                cropperContainer.style.display = "none";
                cropper.destroy();
            } catch (error) {
                console.error("Error during cropping:", error);
            }
        };
    };

    reader.readAsDataURL(input.files[0]);
}



const selectedImages=[];
document.getElementById("input1").addEventListener("change",handleFileselect);

function handleFileselect(event){
    const  addedImagesContainer = document.getElementById("addedImagesContainer");
    addedImagesContainer.innerHTML="";
    const files=event.target.files;
    for (let i=0;i<files.length;i++){
      const file=files[i];
      const thumbnail=document.createElement("div");
      thumbnail.classList.add("thumbnail");

      const img =document.createElement("img");
      img.src=URL.createObjectURL(file);
      img.alt="thumbnail";
      img.style.width="50px";
      img.style.height="auto";
      const removeIcon=document.createElement("span");
      removeIcon.classList.add("remove-icon");
      removeIcon.innerHTML="&times";
      removeIcon.addEventListener("click",function(){
        const index =selectedImages.indexOf(file);
        if(index!==-1){
            selectedImages.splice(index,1);
        }
        thumbnail.remove();
      });
      thumbnail.appendChild(img);
      thumbnail.appendChild(removeIcon);
      addedImagesContainer.appendChild(thumbnail);


    }
}









function validateForm() {
    clearErrorMessages();
    const name = document.getElementsByName('productName')[0].value;
    const description = document.getElementById('descriptionid').value;
    const price = document.getElementsByName('regularPrice')[0].value;
    const salePrice = document.getElementsByName('salePrice')[0].value;
    const color = document.getElementsByName('color')[0].value;
    const category = document.getElementById('category');
    const quantity = document.getElementsByName('quantity')[0].value;
    
    const imageInputs = [
        document.getElementById('input1'),
        document.getElementById('input2'),
        document.getElementById('input3'),
        document.getElementById('input4')
    ];

    let isValid = true;

    if (name.trim() === "") {
        displayErrorMessage('productName-error', 'Please enter a product name.');
        isValid = false;
    } else if (!/^[a-zA-Z\s]+$/.test(name.trim())) {
        displayErrorMessage('productName-error', 'Product name should contain only alphabetic characters.');
        isValid = false;
    }

    if (description.trim() === "") {
        displayErrorMessage('description-error', 'Please enter a product description.');
        isValid = false;
    } else if (!/^[a-zA-Z\s]+$/.test(description.trim())) {
        displayErrorMessage('description-error', 'Product description should contain only alphabetic characters.');
        isValid = false;
    }

    if (!quantity || parseInt(quantity) < 0) {
        displayErrorMessage('quantity-error', 'Please enter a valid non-negative quantity.');
        isValid = false;
    }

    if (!/^\d+(\.\d{1,2})?$/.test(price) || parseFloat(price) < 0) {
        displayErrorMessage('regularPrice-error', 'Please enter a valid non-negative price.');
        isValid = false;
    }

    if (!/^\d+(\.\d{1,2})?$/.test(salePrice) || parseFloat(salePrice) < 0) {
        displayErrorMessage('salePrice-error', 'Please enter a valid non-negative price.');
        isValid = false;
    }

    if (parseFloat(price) <= parseFloat(salePrice)) {
        displayErrorMessage('regularPrice-error', 'Regular price must be greater than sale price.');
        isValid = false;
    }

    if (color.trim() === "") {
        displayErrorMessage('color-error', 'Please enter a color.');
        isValid = false;
    }

    let imageCount = 0;
    for (let input of imageInputs) {
        if (input && input.files && input.files.length > 0) {
            imageCount++;
        }
    }

    if (imageCount < 3) {
        displayErrorMessage('images-error', 'Please upload at least 3 images.');
        alert('Please upload at least 3 images')
        isValid = false;
    }

    return isValid;
}

function displayErrorMessage(elementId, message) {
    const errorElement = document.getElementById(elementId);
    if (errorElement) {
        errorElement.innerText = message;
        errorElement.style.display = "block";
    }
}

function clearErrorMessages() {
    const errorElements = document.getElementsByClassName('error-message');
    Array.from(errorElements).forEach(element => {
        element.innerText = '';
        element.style.display = 'none';
    });
}

function validateAndSubmit() {
    if (validateForm()) {
        document.forms[0].submit();
    }
}


          function displayErrorMessage(elementId, message) {
              var errorElement = document.getElementById(elementId);
              errorElement.innerText = message;
              errorElement.style.display = "block";
          }
  
  
          function clearErrorMessages() {
              const errorElements = document.getElementsByClassName('error-message');
              Array.from(errorElements).forEach(element => {
                  element.innerText = '';
              });
              const errorMessage = document.getElementById('errorMessage');
  
  
          }







  </script> 





<%- include("../../views/partials/admin/footer") %>


